[{"url":"https://nathandecou.github.io/","title":"Home","description":null,"body":"\nCHEZ M. DEC\n\n\t\n\n\n\nBonjour\nBienvenue sur ce ‘blog’. Votre simple présence ici signifie que j’ai enfin passer le cap et que j’ai laissé ma trace sur l’internet.\nCe bout de code n’a aucun autre intêret que d’y accueillir le peu de chose que j’y mettrai. On parlera surtout d’informatique, mais nous sommes à l’abris de rien.\n","path":null},{"url":"https://nathandecou.github.io/dev/","title":"Developpement","description":null,"body":"\nOups\nIl n’y a rien ici pour le moment\n","path":null},{"url":"https://nathandecou.github.io/cyber/","title":"Cybersecurité","description":null,"body":"Introduction\nTout ce qui se rapproche de près (ou de loin) à la cybersécurité.\n","path":null},{"url":"https://nathandecou.github.io/cyber/writeup_htb/","title":"Write-up HackTheBox","description":null,"body":"Contenu\nCette section contient des writeups HackTheBox. C’est à dire des rapports/tutoriels sur des machines ou des challenges de la plateformes.\n","path":null},{"url":"https://nathandecou.github.io/cyber/writeup_htb/alert/","title":"Machine - alert","description":null,"body":"Machine\n\nURL : Linkvortex\nDifficulté : easy\n\n\n\t\n\t\tNote\n\tCette machine est encore dans la saison active d’HackTheBox. Afin de respecter les règles en termes de publication de rapports, ce document ne sera pas publié avant que la machine ne passe en retired.\n\n\n","path":null},{"url":"https://nathandecou.github.io/cyber/writeup_htb/chemistry/","title":"Machine - chemistry","description":null,"body":"Machine info\n\nurl : chemistry\ndifficulté : easy\n\n\n\t\n\t\tNote\n\tCette machine est encore dans la saison active d’HackTheBox. Afin de respecter les règles en termes de publication de rapports, ce document ne sera pas publié avant que la machine ne passe en retired.\n\n\n","path":null},{"url":"https://nathandecou.github.io/cyber/writeup_htb/linkvortex/","title":"Machine - linkvortex","description":null,"body":"Machine\n\nURL : Linkvortex\nDifficulté : easy\n\n\n\t\n\t\tNote\n\tCette machine est encore dans la saison active d’HackTheBox. Afin de respecter les règles en termes de publication de rapports, ce document ne sera pas publié avant que la machine ne passe en retired.\n\n\n","path":null},{"url":"https://nathandecou.github.io/cyber/writeup_htb/cap/","title":"Machine - cap","description":null,"body":"Machine\n\nURL : Underpass\nDifficulté : easy\n\nEnumaration\nOn utilise nmap pour lister le nombre de ports ouverts : nmap &lt;IP&gt;. Il y a 3 ports ouverts (80,21 et 22)\nSur le port 80, on a un dashboard. Sur le menu de gauche, on a un bouton permettant de générer des “security snapshots”. A chaque clic, on est redirigé vers /data/&lt;ID&gt;, avec &lt;ID&gt; l’identifiant du scan.\nEn remplaçant ID par un autre nombre on accède à d’anciens snapshot. Notamment le premier (id 0).\nAnalyse du pcap\nOn peut télécharger le .pcap associé à ce scan. En l’analysant (avec https://apackets.com/ par exemple), on voit que des connexions TCP ont été capturées. On t voit apparaître le mot de passe en clair.\nAccès à la machine\nEn essayant ce mot de passe pour une connexion SSH, ça fonctionne. Nous avons donc accès à la machine et le flag user.\nAccès root\nOn lance linpeas sur la machine, et on trouve que le binaire /usr/bin/python3.8 à la capability CAP_SETUID. On peut donc exploiter cette capability pour lancer un process en tant que root : /usr/bin/python3 -c 'import os; os.setuid(0); os.system(\"/bin/sh\")'. Cette commande va ouvrir un shell en tant que root (uid = 0)\n\nOn recupere ensuite le flag root.\n","path":null},{"url":"https://nathandecou.github.io/cyber/writeup_htb/underpass/","title":"Machine - underpass","description":null,"body":"Machine\n\nURL : Underpass\nDifficulté : easy\n\n\t\n\t\tNote\n\tCette machine est encore dans la saison active d’HackTheBox. Afin de respecter les règles en termes de publication de rapports, ce document ne sera pas publié avant que la machine ne passe en retired.\n\n\n\n\n","path":null},{"url":"https://nathandecou.github.io/adminsys/","title":"Administration Système","description":null,"body":"Introduction\nDes choses concernant l’administration système principalement (exclusivement ?) sur linux.\n","path":null},{"url":"https://nathandecou.github.io/osint/","title":"OSINT","description":null,"body":"\nOu suis-je ?\nVous êtes sur la partie dédiée à l’OSINT (OpenSource Intelligence), ou ROSO (Renseignements en Sources Ouvertes) en français.\n\nL’OSINT ?\nCette pratique consiste à tirer des informations de données en accès LIBRE. Il peut s’agir par exemple de retrouver le nom d’une personne présente sur une photo, ou bien le lieu ou a été prise cette même photo.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/","title":"Challenges Bellingcat 2024","description":null,"body":"\nIntroduction\nEn fin d’année 2024, Bellingcat ont mis en ligne un ensemble de challenges d’OSINT\nLe site ressemble à ça :\n\nIl y a en tout 4 sections, chacune contenant 5 exercices.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/sticky-situation/","title":"Sticky situation","description":null,"body":"\nObjectif\nTrouver sur quelle montagne a été prise la photo suivante.\n\nRecherche de la région\nOn peut lire sur plusieurs stickers Tirol. Ainsi que Zillertal, une vallée dans le Tyrol autrichien.\n\nDans le fond de l’image, on aperçoit ce qui semble être un lac.\n\nEn se rendant dans la vallée Zillertal sur Google Earth, le relief et le lac semblent correspondre. Mais pour l’instant rien de certain.\n\nRecherche précise de la montagne\nUn élément décisif de la recherche est le cette espèce ce lac que l’on aperçoit au second plan de la photo originale.\n\nEn cherchant sur Google Earth, on trouve un lac qui pourrait correspondre.\n\nEt en cherchant le bon angle, on confirme qu’il s’agit du bon endroit. En haut, la vue depuis Google Earth, en bas la photo originale.\n\nNom de la montagne\nEn cherchant une carte topographique de la zone sur https://en-in.topographic-map.com, on retrouve notre lac (entouré en violet sur l’image ci dessous).\nOn repère ensuite un chemin de randonnée (surlignée en orange). Ce chemin correspond à ce qu’on voit depuis la vue sur Google Earth.\nSur la carte topographique il est indiqué que le nom de la mongtagne au bout de ce chemin est Wiedersberger Horn. C’est d’ici qu’a été prise la photo originale.\n\nSolution\nLa montagne est Wiedersberger Horn.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/synoptic-code/","title":"Synoptic code","description":null,"body":"\nObjectif\nUn code morse a été intercepté le 13 Octobre 2024 depuis le Yelna un bateau de la marine russe en mer noire. Il faut retrouver depuis ce code la température mesurer par le navire. Le code est le suivant :\n\n\nTraduction du morse vers l’alphabet\nLe code morse une fois remis en alphabet donne ceci :\n\nEn cherchant on tombe sur plusieurs articles et tweet de personne traduisant de tels codes vers des informations tangibles (par exemple ce tweet de @te3ej). Cependant, je n’ai pas trouvé comment ils s’y prenaient.\nEn cherchant ‘synoptic code’ (le nom du challenge), on trouve qu’il s’agit d’un codage de données servant à transmettre des données météorologiques.\n\nL’IA à la rescousse\nJ’ai décidé d’utiliser l’outil perplexity et de voir si l’agent était capable de traduire le message. Le message a pu être traduit par l’IA sans soucis. Attention toute fois, on peut voir dans les sources utilisées par perplexity qu’un writeup sur ce challenge est utilisée. Même si les autres sources pourraient probablement suffir à l’outil pour la traduction, il est évident que celle est la plus utile mais constitue presque de la triche.\n\nSolution\nLa température à trouver est 28.0°C.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/flamingo-find-it/","title":"Flamingo find it","description":null,"body":"\nObjectif\nTrouver où a été prise la photo suivante.\n\nRecherche inversée\nEn utilisant la recherche d’image inversée de Google Image, on trouve une image qui semble être au même endroit.\n\nOn peut lire que la photo vient du zoo Woodland Park Zoo à Seattle.\n\nVerification\nOn trouve la version complète de l’image que la recherche inversée nous a donné, et on compare avec l’image originale (image trouvée en haut, originale en bas).\n\nAprès verification, on confirme qu’il s’agit bien du même enclos.\n\nSolution\nLa photo a été prise au Woodland Park Zoo.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/name-that-street/","title":"Name that street","description":null,"body":"\nObjectif\nTrouver la rue qui apparaît sur l’image ci dessous\n\nRecherche\n\nTrouver le pays\nOn voit rapidement sur les plaques d’immatriculations des véhicules le D caractéristique des plaques allemandes.\n\nTrouver la ville\nAu fond de l’image, on voit une enseigne, JP Stoffe.\n\nEn cherchant ce nom sur Google on trouve https://jpstoffe.de/ et 3 adresses sur leur page de contact.\n\nEn allant voir chacune de ses adresses, on voit que celle à Francfort semble correspondre. La devanture du magasin est differente de l’image originale. Cependant, on voit le bar Shishandis à sa droite, comme sur l’image originale (streetview en haut, image originale en bas)\n\nAvec ces deux informations, on confirme qu’il s’agit de la bonne rue.\n\nSolution\nIl s’agit de la rue Stiftstraße à Francfort.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/hot-stuff/","title":"Hot stuff","description":null,"body":"\nObjectif\nL’objectif est de trouver le numéro d’immatriculation ainsi que le numéro peint sur l’hélicoptère apparaissant sur la photo suivante. Au format AB-CDE-99.\n\nLe numéro d’immatriculation\nJe vais commencer par chercher le numéro d’immatriculation (aussi appelé ‘tail number’). Il se trouve sur la queue de l’appareil.\n\nSimple zoom\nSur la photo fournie, le numéro est illisible même en zoomant sur l’appareil.\n\n\nReverse search\nUne bonne façon pour retrouver une image est d’utilisée la recherche inversée avec Google images par exemple.\nEn faisant cette recherche avec notre image, on tombe rapidement sur cette image\n\nIl s’agit du même hélicoptère, avec le numéro 21 peint sur dessus. La photo est bien plus net et le numéro d’immatriculation y est visible : EC-MQR.\n\nLe numéro peint\nL’énoncé du challenge nous indique qu’il a changé depuis la photo que l’on possède, il nous faut donc trouver le bon numéro.\nEn cherchant ‘EC-MQR’ sur Google on trouve une série de photos sur le site www.jetphotos.com. Voici le lien vers la série de photos https://www.jetphotos.com/registration/EC-MQR.\nLa photo la plus récente est celle ci\n\nLe numéro est donc le 11\n\nSolution\nLa solution est donc EC-MQR-11.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/lost-in-the-fog/","title":"Lost in the fog","description":null,"body":"\nObjectif\nTrouver le code ICAO de l’aéroport ou a été prise la photo suivante.\n\nEXIFS\nLes coordonnées GPS se trouvent dans les metadatas de l’image. On peut les trouver avec l’outil exiftool ou bien en ligne via onlineexifviewer par exemple.\n\nSolution\nLa photo a été prise à l’aeroport lundy airstrip, son code ICAO est EGZV.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/up-the-creek/","title":"Up the creek","description":null,"body":"Premier exercice des challenges Bellingcat\n\nObjectif\nTrouver le nom de la rivière sur la photo suivante :\n\nRecherche\n\nDonnées EXIF\nOn commence par verifier les metadatas de l’image en examinant les données exifs.\nVia l’outil exiftool on récupère les données GPS suivantes :\n\n\nNom de la rivière\nEn se rendant à ces coordonnées (47°41’39.33“N 121°59’41.77“W) sur google maps nous pouvons confirmer qu’il s’agit du bon emplacement\n\nSolution\nLa rivière est donc la ‘Snoqualmie’.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/on-the-metro/","title":"On the metro","description":null,"body":"\nObjectif\nTrouver la station terminus du metro que l’on voit sur la photo suivante.\n\nRecherche inversée basique\nEn utilisant la recherche inversée sur Google Image (et en deplaçant le rectangle de recherche vers la partie droite de l’image), on a beaucoup de résultats concernant Prague.\n\nRecherche inversée détaillée\nOn peut alors relancer une recherche inversée en ajoutant les mots clés metro prague.\n\nUne des images qui ressort (entourée en rouge sur la photo ci-dessus) semble être une photo de la même station que celle de la photo originale.\n\nConfirmation de la station\nPour s’en convaincre, on cherche à trouver une autre vue de la station. Sur Youtube on trouve cette video.\n\n\nOn peut voir à 2mn02 ce plan. On y voit le même carrelage que sur l’image originale. On confirme donc qu’il s’agit bien de cette station.\n\nRecherche de la station terminus\nPlus tard, on y voit ce plan sur lequelle on voit que le train allant de gauche à droite se dirige vers une correspondance avec la ligne de metro A. En regardant une carte du metro de Prague, on voit alors que ce train aurait comme terminus Cerny Most (voir la carte plus bas dans ce post).\n\nEnfin, on voit arriver un train de la droite, avec au fond le mur de carrelage comme sur la photo originale. C’est donc le train dans la bonne station dans le bon sens. On sait donc qu’il ne va pas à la station Cerny Most mais à l’autre terminus de la ligne.\n\nEn se referant encore une fois à la carte du metro, on trouve que ce train se dirige vers la station Zličín.\n\nEn rouge : notre station\nEn bleu : la correspondance avec la ligne A\nEn violet : le terminus d’un train passant par cette correspondance\nEn vert : l’autre terminus\n\n\nSolution\nLe metro se dirige vers la station Zličín.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/operation-fleet-finder/","title":"Operation fleet finder","description":null,"body":"\nObjectif\nTrouver le code MMSI du bateau le plus à gauche sur la photo suivante.\n\nRecherche\nOn voit rapidement qu’il s’agit d’un porte avion, probablement américain du fait des drapeaux qu’on l’on peut voir flotter sur l’image.\nOn peut donc trouver la liste de tous les portes avions americains pour essayer de trouver le notre. La liste est disponibles sur wikipedia.\nEn se basant principalement sur le systeme d’antenne sur le haut du bateau, on finit par trouver qu’il s’agit du George H.W. Bush (MMSI 369970663). Voici la comparaison me permettant de tirer cette conclusion. En haut un zoom sur l’antenne sur l’image originale, en bas un zoom sur l’antenne depuis une image de Wikipedia.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/pet-the-cat/","title":"Pet the cat","description":null,"body":"\nObjectif\nTrouver la ville où a été prise la photo suivante\n\nRecherche de la ville\n\nEXIF\nMalheuresement, rien dans les metadatas de l’image ne nous donne d’informations quant à l’endroit où a pu être prise la photo.\n\nRecherche inversée\nJ’utilise donc la recherche d’image inversée de Google Images. En jouant un peu avec le cadre permettant de définir la zone à analyser, on tombe sur des images comme celles ci.\n\nLe batiment sur ces deux images ressemble beaucoup à celui au fond de la photo à localiser. Le batiment est à Kotor, au Montenegro.\n\nRecherche de l’endroit précis\nPour s’assurer, qu’il s’agit bien de Kotor je cherche l’endroit précis où a été prise la photo. Il n’y a presque aucun street view à Kotor. Cependant, c’est une ville touristique, il y a donc souvent des vidéos de personne se filmant en train de parcourir la ville à pied.\nEn cherchant ‘Kotor walk’ sur YouTube on trouve par exemple cette vidéo\n\n\nA exactement 5mn29 on y voit ce plan\n\nOn peut y reconnaitre le batiment en fond de la photo originale à gauche, et l’architecture de la barrière en pierre à droite.\nVoici une comparaison des deux photographies.\n\nSolution\nLa photo a été prise à Kotor.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/pulling-focus/","title":"Pulling focus","description":null,"body":"\nObjectif\nTrouver la fonction du batiment dans cette photo.\n\nRecherche de la ville\nMalgrès le flou de la photo, on arrive à lire КАЗАН КУЙГАН.\n.\nCela se traduit parKazan-Kuygan, une ville au kirgizistan.\n\nRecherche du batiment\nEnsuite en se deplaçant sur Google Earth on trouve l’endroit où pourrait être le batiment. Malheuresement, celui ci n’existe plus. On confirme quand même le bon emplacement via des structures qui n’ont pas bougé et grace aux reliefs montagneux en arrière plan. Image depuis Google Earth en haut, image originale en bas.\n\nFonction du batiment\nLe batiment est categorisé par maps comme une bibliothèque.\n\nSolution\nLa solution est donc library (le challenge attends la fonction du batiment en anglais).\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/riders-view/","title":"The riders view","description":null,"body":"\nObjectif\nLes motards sur cette photo voient un monument. Il faut trouver le nom de la personne associé à ce monument.\n\nRecherche du pays\n\nRecherche inversée\nEn faisant une recherche d’image inversée avec Google Image, la plupart des résultats sont des images de Bogota en Colombie. Il peut donc s’agir de cette ville.\n\nArgument supplémentaire\nDerrière les motards, on voit une plaque d’immatriculation jaune.\n\nEn allant sur le site Geomastr, on peut défiler toutes les photos de plaques référencées pour essayer de voir si les plaques colombiennes correspondent.\nOn voit que les plaques référencées par le site semblent bien correspondre à ce qu’on voit sur l’image originale.\n\nOn part alors du principe qu’il s’agit bien de la Colombie et de Bogota. Ce n’est pas une certitude (surtout pour Bogota), mais c’est notre seul idée pour le moment.\n\nConfirmation de la ville\nAu fond de l’image sur la gauche, on aperçoit des devantures de vitrines. On voit aussi une station essence au fond à droite. L’image n’est pas assez net pour être certain mais on voit au moins les lettres MO?E?. Je ne suis pas sûr de la troisième et de la dernière lettres.\n\nEn essayant des recherches avec des lettre qui pourraient correspondre je finis par essayer MOVET et tombe sur cette image.\n\nÇa semble correspondre à ce qu’on voit sur l’image originale (avec le chien rose). Ce batiment est donc un cabinet vétérinaire ‘MOVET’.\nEn allant sur le site de ces cabinets : https://www.movet.co, on voit dans le pied de page la liste des cliniques.\n\nToutes ces cliniques sont à Bogota !\n\nRecherche de la rue\nIl ne nous reste plus qu’a aller voir chacune de ces adresses pour trouver celle ou a été prise la photo. Voici la photo street view du bon cabinet (en haut) comparée à la photo originale (en bas).\n\nVu des motards\nPour trouver ce que voient les motards, nous allons nous placer au même endroit sur maps et prendre le même angle de vue. Voici ce que ça donne. La clinique est en bas à droite dans le cercle rouge. Les motards sont symbolisés par le point bleu, et leur champ de vision par le cone bleu clair.\n\nOn voit qu’un parc est dans leur champ de vision. Le Parque de los Hippies. En en cherchant plus sur ce parc, on trouve ce site. Cet article détail l’histoire du parc. On y apprends notamment qu’il était originellement nommé le parc Antonio José de Sucre ou bien Parque Julio Flórez.\nEn testant, on trouve que la réponse attendue est Julio Flórez.\n\nSolution\nLa réponse attendue est Julio Flórez.\n","path":null},{"url":"https://nathandecou.github.io/osint/2024-bellingcat/fully-stocked/","title":"Fully stoked","description":null,"body":"\nObjectif\nIl faut trouver le port ou a été prise la photo suivante.\n\nRecherche inversée\nEn faisant une recherche inversée d’image sur Google Image, la photo ressort enormement de fois comme photo d’illustration d’articles (principalement sur le fret maritime). Je n’ai pas trouvé d’informations quant à l’image elle même de cette manière.\nHeuresement, Google Image n’est pas le seul outil permettant de faire de la recherche inversée d’images.\nPour cette deuxième tentative, j’utilise Yandex.\n\nOn peut voir que l’outil donne un texte ‘about the image’ en russe.\n\nEn traduisant ce texte via Deepl on trouve ceci :\n\nIl s’agit d’un paragraphe tiré de wikipedia sur le port d’hambourg. En recherchant des photos de ce port on confirme qu’il s’agit du même que celui de la photo originale.\n\nSolution\nIl s’agit du port d’Hambourg.\n","path":null}]